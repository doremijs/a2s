/* eslint-disable */
import { requestAdapter } from './a2s.adapter'
import type { RequestBody, RequestQuery } from './a2s.types'

function extract(args: RequestBody, queryList: string[], paramList: string[]) {
  const query: RequestQuery = {}
  const body: RequestBody = {}
  Object.keys(args).forEach(key => {
    if (queryList.includes(key)) {
      query[key] = args[key] as RequestQuery
    } else if (!paramList.includes(key)) {
      body[key] = args[key]
    }
  })
  return { query, body }
}

/**
 * 路径参数插值
 */
function replacePath(path: string, pathValueMap?: unknown) {
  return path
    .replace(/\/\{(\w+)}\//g, (_, str) => {
      return `${(pathValueMap as Record<string, string | number>)[str]}`
    })
    .replace(/\/:(\w+)\//g, (_, str) => {
      return `${(pathValueMap as Record<string, string | number>)[str]}`
    })
}

//TODO
export const services = {
  <% it.apis.forEach(group => {%> 
    <% group.list.forEach(item => {%>
      '<%= group.name%>@<%= item.title %>'
      (<%~ include('yapi.args',item)%>){
        return requestAdapter({
          "url": replacePath('<%= item.query_path.path%>',args),
          "method": '<%= item.method%>',
          ...extract(args,[<% item.req_query.forEach(q => {%>
            '<%= q.name%>',
          <% }) %>],[<% item.req_params.forEach(p => {%>
            '<%= p.name%>',
            <% }) %>])
        })
        },
    <% }) %>
  <% })%>
}
